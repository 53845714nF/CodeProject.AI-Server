{
  "Logging": {
    "LogLevel": {
      "Default": "Warning",
      "Microsoft.AspNetCore": "Warning",
      "Microsoft.Hosting.Lifetime": "Warning",
      "CodeProject.SenseAI.API.Server": "Information"
    }
  },

  "AllowedHosts": "*",
  "ForceHttps": false,

  "UpdateCheckUrl":    "https://www.codeproject.com/ai/sense/version.aspx",
  "UpdateDownloadUrl": "https://www.codeproject.com/ai/sense/latest.aspx",

  "ErrLogAPIKey":      "ed359c3a-8a77-4f23-8db3-d3eb5fac23d9",

  "BackendOptions": {
    "ResponseTimeout":       "00:00:30",
    "CommandDequeueTimeout": "00:00:10",
    "MaxQueueLength":        10
  },

    "FrontEndOptions": {

        "ROOT_PATH": "..", // The current working dir, will be determined at runtime
        "API_DIRNAME": "api", // We'll use this to search for the ROOT_PATH dynamically
        "MODULES_PATH": "%ROOT_PATH%\\AnalysisLayer",

        // For current Windows setup
        "PYTHON_BASEPATH": "%MODULES_PATH%\\Deepstack\\Python37\\venv",
        // For the future, use the %PLATFORM% macro so we can have multiple installs in the same base
        // "PYTHON_BASEPATH": "%MODULES_PATH%\\bin\\%PLATFORM%\\Python37\\venv",

        // These are really just fallback values. The actual value will be set at runtime based on
        // the current operating system
        "PYTHON37_PATH": "%PYTHON_BASEPATH%\\scripts\\Python",  // windows
        // "PYTHON37_PATH": "%PYTHON_BASEPATH%\\bin\\Python",   // linux
        // "PYTHON37_PATH": "%PYTHON_BASEPATH%\\bin\\Python",   // macos

        // Values specific to the analysis modules
        "BackendEnvironmentVariables": {

            // Shared values
            "ERRLOG_APIKEY": "ed359c3a-8a77-4f23-8db3-d3eb5fac23d9",

            "PORT": 5000, // Note that this is merely a placeholder and will be overridden in code

            // DeepStack legacy environment variables.
            // For Legacy Modules
            "VISION-FACE": true,
            "VISION-DETECTION": false,
            "VISION-SCENE": true,
            "APPDIR": "%MODULES_PATH%\\DeepStack\\intelligencelayer",
            "DATA_DIR": "%MODULES_PATH%\\DeepStack\\datastore",
            "TEMP_PATH": "%MODULES_PATH%\\DeepStack\\tempstore",
            "MODELS_DIR": "%MODULES_PATH%\\DeepStack\\assets",
            "PROFILE": "windows_native",
            "CUDA_MODE": "False",

            // For the .NET YOLO Module...
            "CPSENSEAI-YOLO": true
        },

        // The processes (typically the backend analysis processes) that are to be started when the
        // server starts. They will be started in order of appearance. For "Command" we currently
        // provide the %PYTHON37_PATH% macro that will point to an instance of the Python 3.7
        // interpreter if needed.
        "StartupProcesses": [

            /* Not necessary because (a) each of these processes are run in a separate process, so
               a moot exercise, and (b) we call the required python interpreter directly.
            {
                "Name": "Python 3.7 Virtual Environment activation for Linux",
                "Activate": false,
                "EnableFlags": [],
                "Queues": [],
                "Command": "bash %PYTHON_BASEPATH%/bin/activate",
                "Args": "",
                "Platforms": [ "linux", "osx" ]
            },
            */
            {
                "Name": "Face Processing",
                "Activate": true,
                "EnableFlags": [ "VISION-FACE" ],
                "Queues": [ "face_queue" ],
                "Command": "%PYTHON37_PATH%",
                "Args": "%MODULES_PATH%\\DeepStack\\intelligencelayer\\face.py",
                "Platforms": [ "windows", "linux", "osx" ]
            },
            {
                "Name": "Scene Classification",
                "Activate": true,
                "EnableFlags": [ "VISION-SCENE" ],
                "Queues": [ "scene_queue" ],
                "Command": "%PYTHON37_PATH%",
                "Args": "%MODULES_PATH%\\DeepStack\\intelligencelayer\\scene.py",
                "Platforms": [ "windows", "linux", "osx" ]
            },
            {
                "Name": "SenseAI Object Detection",
                "Activate": true,
                "EnableFlags": [ "CPSENSEAI-YOLO" ],
                "Queues": [ "detection_queue" ],
                "Command": "%MODULES_PATH%\\CodeProject.SenseAI.AnalysisLayer.Yolo\\CodeProject.SenseAI.AnalysisLayer.Yolo",
                "Platforms": [ "windows", "linux", "osx" ]
            }
            /* We've replaced this with the SenseAI Object Detection (above).
            {
                "Name": "Object Detection",
                "Activate": false,
                "EnableFlags": [ "VISION-DETECTION" ],
                "Queues": [ "detection_queue" ],
                "Command": "%PYTHON37_PATH%",
                "Args": "%MODULES_PATH%\\DeepStack\\intelligencelayer\\detection.py"
                "Platforms": [ "windows", "linux", "osx" ]
            },
            */
            /*
            {
                "Name": "Legacy Classification",
                "Activate": false,
                "EnableFlags": [ "VISION-FACE", "VISION-DETECTION", "VISION-SCENE" ],
                "Queues": [ "face_queue", "detection_queue", "scene_queue" ],
                "Command": "%PYTHON37_PATH%",
                "Args": "%MODULES_DIR%\\DeepStack\\intelligencelayer\\runall.py"
                "Platforms": [ "windows", "linux", "osx" ]
            },
            */
        ]
    }
}
