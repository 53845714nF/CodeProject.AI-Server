{
  "Logging": {
    "LogLevel": {
      "Default": "Error",
      "Microsoft": "Critical",
      "Microsoft.Hosting.Lifetime": "Information",
      "Microsoft.AspNetCore.Mvc": "Error",
      "CodeProject": "Error",
      "CodeProject.AI.API.Server": "Error",
      "CodeProject.AI.Analysis.Yolo": "Error"
    }
  },

  // Kestrel
  "AllowedHosts": "*",
  "ForceHttps": false,

  // Checking for updates
  "UpdateCheckUrl": "https://www.codeproject.com/ai/version.aspx",
  "UpdateDownloadUrl": "https://www.codeproject.com/ai/latest.aspx",

  // Will we be launching the backend analysis modules when the server starts? (handy to disable
  // for debugging the modules separately)
  "LaunchAnalysisServices": true,

  // Request queue settings.
  // TODO: Rename to ModuleQueue
  "QueueProcessingOptions": {
    "ResponseTimeout": "00:00:30",
    "CommandDequeueTimeout": "00:00:10",
    "MaxQueueLength": 32
  },

  // TODO: Rename to "Server"
  "FrontEndOptions": {

    // TODO: Add PORT_CLIENT here, with PORT_CLIENT signifying this is the port that a client 
    //       of the server should use, as opposed to PORT_MODULE which is the port a a module
    //       should use for communicating with the server
    // PORT_CLIENT: 5000,   // Port for frontend clients using the API

    // The root of the application, relative to the current application working directory. In 
    // production, the CodeProject.AI server sits in the /Server dir, so we need to go up one level
    // to get to the root path
    "ROOT_PATH": "..",

    // The location of the AI modules
    "MODULES_PATH": "%ROOT_PATH%\\AnalysisLayer",

    // The template location of the Python interpreter for use when the Runtime for a module is
    // set as "Python". In Development mode, the Python folder will go under an OS specific
    // folder. This allows the same python modules to run under Windows and Linux. 
    // %PYTHON_RUNTIME% will be replaced by the ModuleConfig's Runtime value if the Runtime
    // begins with "Python". Ultimately, Runtimes and their launcher's paths will be registered
    // by "runtime" type modules, removing the need for this hardcoding.
    "PYTHON_BASEPATH": "%MODULES_PATH%\\bin\\%PYTHON_RUNTIME%\\venv",
    "PYTHON_PATH": "%PYTHON_BASEPATH%\\scripts\\Python",

    // These are no longer used
    // "SERVEREXE_DIRNAME": "server", // dir name containing the API server exe for production. 
    // "APICODE_DIRNAME": "api" // dir name containing all the API server code. 

    // These key/values are added to the set of environment variables when the backend
    // processed are launched.
    "EnvironmentVariables": {

      "CPAI_APPROOTPATH": "%ROOT_PATH%",

      // TODO: Change PORT to PORT_CODEPROJECTAI to provide the backend analysis services the port
      //       they will use when communicating with CodeProject.AI's queues. Individual modules
      //       are welcome to add their own "PORT" var themselves in their modulesettings.json 
      //       file if they need it.
      // PORT_CODEPROJECTAI: 5000, // Port for backend analysis servers providing services to the API
      "PORT": 5000,

      "ERRLOG_APIKEY": "ed359c3a-8a77-4f23-8db3-d3eb5fac23d9"
    }
  }
}
