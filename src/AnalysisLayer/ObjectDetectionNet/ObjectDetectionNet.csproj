<Project Sdk="Microsoft.NET.Sdk.Worker">

	<!-- Platform, architecture, runtime target defines -->
	<Import Project="../../SDK/NET/Common.targets" />

	<!-- Common properties -->
	<PropertyGroup>
		<Name>ObjectDetection (YOLO .Net)</Name>
		<RootNamespace>CodeProject.AI.Analysis.Yolo</RootNamespace>
		<AssemblyName>ObjectDetectionNet</AssemblyName>
		<Version>2.0.5</Version>
		<Nullable>enable</Nullable>
		<ImplicitUsings>disable</ImplicitUsings>
		<UserSecretsId>dotnet-CodeProject.AI.AnalysisLayer.Yolo-384BE45C-AAED-42BA-9DDB-EF37356B630F</UserSecretsId>
		<ApplicationIcon>favicon.ico</ApplicationIcon>
		<GenerateRuntimeConfigurationFiles>true</GenerateRuntimeConfigurationFiles>
		<Authors>CodeProject</Authors>
		<Platform>AnyCPU</Platform>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
		<TargetFramework>net7.0</TargetFramework>
	</PropertyGroup>

	<!-- Common Release properties -->
	<PropertyGroup Condition="'$(Configuration)'=='Release'">
		<SelfContained>True</SelfContained>
		<DebugType>none</DebugType>
		<DebugSymbols>false</DebugSymbols>
		<TreatWarningsAsErrors>true</TreatWarningsAsErrors>
		<WarningsAsErrors />
		<!--<PublishSingleFile>true</PublishSingleFile>-->
	</PropertyGroup>

	<!-- Common Debug properties -->
	<PropertyGroup Condition="'$(Configuration)'=='Debug'">
		<TreatWarningsAsErrors>true</TreatWarningsAsErrors>
		<WarningsAsErrors />
		<NoWarn>1701;1702;</NoWarn>
		<DebugType>portable</DebugType>
		<DebugSymbols>true</DebugSymbols>
	</PropertyGroup>

	<ItemGroup>
	  <Content Include="favicon.ico" />
	</ItemGroup>

	<ItemGroup>
		<!-- 
		Requires building the Nuget packages yourself since, for some unknown reason, the packages 
		have not been built and published on Nuget. I leave it as an exercise for the reader as to 
		why. For now. DirectML on Windows will suffice.
			 
		<PackageReference Include="Microsoft.ML.OnnxRuntime.OpenVino" Version="1.13.0" Condition="'$(IsWindows)'=='true'" />
		-->
		<!-- 
		<PackageReference Include="Microsoft.ML.OnnxRuntime.DirectML" Version="1.12.1" Condition="'$(IsWindows)'=='true'" />
		-->

		<!-- Note that for Windows we're installing GPU (Cuda) not DirectML. DirectML gives us
		     better perf on non-GPU machines, but is showing problems. 
		-->		
		<PackageReference Include="Microsoft.ML.OnnxRuntime.DirectML" Version="1.13.1" Condition="'$(IsWindows)'=='true'" />

		<!--<PackageReference Include="Microsoft.ML.OnnxRuntime.Gpu" Version="1.13.1" Condition="'$(IsWindows)'=='true'" />-->

		<!-- See https://github.com/microsoft/onnxruntime/issues/9707 Onnx nuget isn't configured 
		     properly for macos. You'll need to homebrew install onnxruntime for macOS (Intel) -->
		<PackageReference Include="Microsoft.ML.OnnxRuntime" Version="1.13.1" Condition="'$(IsOsx)'=='true'" />
		<!-- Linux, x86_64: GPU is supported -->
		<PackageReference Include="Microsoft.ML.OnnxRuntime.Gpu" Version="1.12.1" Condition="'$(IsLinux)'=='true' And '$(IsArm64)'!='true'" />
		<!-- Linux, Arm64: GPU is not supported for our scenarios -->
		<PackageReference Include="Microsoft.ML.OnnxRuntime" Version="1.13.1" Condition="'$(IsLinux)'=='true' And '$(IsArm64)'=='true'" />

		<PackageReference Include="SkiaSharp" Version="2.88.3" />
		<PackageReference Include="System.Text.Json" Version="7.0.0" />
	
		<PackageReference Include="Microsoft.Extensions.Hosting" Version="7.0.0" />
		<PackageReference Include="Microsoft.Extensions.Hosting.Systemd" Version="7.0.0" />
		<PackageReference Include="Microsoft.Extensions.Hosting.WindowsServices" Version="7.0.0" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\..\API\Common\Common.csproj" />
		<ProjectReference Include="..\..\SDK\NET\NET.csproj" />
	</ItemGroup>

	<ItemGroup>
	  <None Update="assets\yolov5m.onnx">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	  <None Update="assets\yolov5n.onnx">
	    <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
	  </None>
	  <None Update="assets\yolov5s.onnx">
	    <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
	  </None>
	</ItemGroup>

	<ItemGroup>
		<None Update="custom-models\ipcam-general.onnx">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Update="custom-models\license-plate.onnx">
		  <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
	</ItemGroup>

</Project>
